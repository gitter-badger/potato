CMAKE_MINIMUM_REQUIRED (VERSION 2.8)

PROJECT (all)

# define/check environment
IF ("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
  SET (OS_IS_LINUX TRUE)
  add_definitions(-DOS_IS_LINUX)
ELSEIF ("${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
  SET (OS_IS_WINDOWS TRUE)
  add_definitions(-DOS_IS_WINDOWS)
ELSE ()
  MESSAGE (FATAL_ERROR "Sorry, don't support your system - ${CMAKE_SYSTEM_NAME}")
ENDIF ()

IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  SET (CXX_GNU TRUE)
  add_definitions(-DCXX_GNU)
ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
  SET (CXX_MSVC TRUE)
  add_definitions(-DCXX_MSVC)
ELSE ()
  MESSAGE (FATAL_ERROR "Sorry, don't support your compiler - ${CMAKE_CXX_COMPILER_ID}")
ENDIF ()

if("${CMAKE_BUILD_TYPE}" STREQUAL "DEBUG" OR "${CMAKE_BUILD_TYPE}" STREQUAL "debug" OR "${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
  set(BUILD_DEBUG TRUE)
  add_definitions(-DBUILD_DEBUG)
elseif("${CMAKE_BUILD_TYPE}" STREQUAL "MINSIZEREL" OR "${CMAKE_BUILD_TYPE}" STREQUAL "minsizerel" OR "${CMAKE_BUILD_TYPE}" STREQUAL "Minsizerel")
  set(BUILD_MINSIZEREL TRUE)
  add_definitions(-DBUILD_MINSIZEREL)
elseif("${CMAKE_BUILD_TYPE}" STREQUAL "RELEASE" OR "${CMAKE_BUILD_TYPE}" STREQUAL "release" OR "${CMAKE_BUILD_TYPE}" STREQUAL "Release")
  set(BUILD_RELEASE TRUE)
  add_definitions(-DBUILD_RELEASE)
elseif("${CMAKE_BUILD_TYPE}" STREQUAL "RELWITHDEBINFO" OR "${CMAKE_BUILD_TYPE}" STREQUAL "relwithdebinfo" OR "${CMAKE_BUILD_TYPE}" STREQUAL "RelWithDebInfo")
  set(BUILD_RELWITHDEBINFO TRUE)
  add_definitions(-DBUILD_RELWITHDEBINFO)
else()
  message(FATAL_ERROR "Please set the CMAKE_BUILD_TYPE - DEBUG, MINSIZEREL, RELEASE, RELWITHDEBINFO")
endif()

if(OS_IS_LINUX AND CXX_GNU)
  MESSAGE(STATUS "Right, it will build as ${CMAKE_BUILD_TYPE} by ${CMAKE_CXX_COMPILER_ID} in ${CMAKE_SYSTEM_NAME}")
elseif(OS_IS_WINDOWS AND CXX_MSVC)
  MESSAGE(STATUS "Right, it will build as ${CMAKE_BUILD_TYPE} by ${CMAKE_CXX_COMPILER_ID} in ${CMAKE_SYSTEM_NAME}")
else()
  message(FATAL_ERROR "Sorry, it don't support to compile by ${CMAKE_CXX_COMPILER_ID} in ${CMAKE_SYSTEM_NAME}")
endif()


# define path
SET (ROOT_PATH "${all_SOURCE_DIR}/../..")
SET (CODE_PATH "${ROOT_PATH}/code")
SET (OUT_PATH "${ROOT_PATH}/out")

# add sub-project
ADD_SUBDIRECTORY (potato)
ADD_SUBDIRECTORY (test)

